version: "3"
services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    environment:
      - APP_ENV=dev
      - APP_URL=http://localhost:4214
      - APP_HOST=localhost
      - WEBTOKEN_SECRET_KEY=uAsBwuAsBw6WxqD6WxqDuAsBw6WxqDuAsBw6WxqD
      - WEBTOKEN_EXPIRATION_TIME=240000
      - DB_URL="mongodb://mongo/anoya"
      - MAILGUN_DOMAIN="smtp.gmail.com"
      - MAILGUN_HOST="465"
      - MAILGUN_KEY="pass"
      - MAILGUN_FROM="Amazing site!"
    networks:
      place:
        aliases:
          - api
    depends_on:
      - mongo
    volumes:
      - .:/usr/src/app
    command: npm run start:dev
  redis:
    image: bitnami/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
         - 6677:6379
    networks:
      place:
        aliases:
          - redis
  nginx:
    build:
      context: .
      dockerfile: ./nginx.Dockerfile
    ports:
      - 80:80 #api
      - 443:443 #front
    networks:
      place:
        aliases:
          - nginx
    links:
      - api
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    depends_on:
      - api
    volumes:
      - ./front/public:/usr/src/app
      - ./vhosts:/etc/nginx/sites-enabled
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/opt/certbot
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/var:/var/lib/letsencrypt
      - ./data/certbot/www:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --non-interactive -d anoya.io --agree-tos --webroot-path=/var/www/html --email crypto.viv@yandex.ru
  mongo-express:
     image: mongo-express
     restart: always
     networks:
       place:
        aliases:
         - express
     ports:
       - 8081:8081
  mongo:
    image: mongo:4.4
    restart: always
    volumes:
      - ./data/db:/data/db
    networks:
      place:
        aliases:
          - mongo
volumes:
  data-volume:
#### network config
networks:
  place:
