import { Telegraf, Markup, session } from 'telegraf';
import { Injectable } from "@nestjs/common";

import { Context } from "../entities/interfaces";
import { InjectBot } from 'nestjs-telegraf';
// import { AuctionService } from 'src/auction/auction.service'; 

@Injectable()
export class TelegramService {
  constructor(
    @InjectBot() private bot: Telegraf<any>,
    //    private auctionService: AuctionService
  ) {

    this.bot.use(session())
    this.bot.start((ctx) => ctx.reply(this.getMenu(ctx)))

    this.bot.action('HOT_PURCHASE', (ctx) => this.showHotPurchase({ ctx, index: null }))
    // this.bot.on('sticker', (ctx) => ctx.reply('üëç'))
    // this.bot.hears('auth', (ctx) => ctx.reply('Hey there'))

  }

  getMenu(ctx: any): string {
    const { startPayload } = ctx
    //  console.log('ctx.startPayload')
    //  if (!startPayload) return "–¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è"
    // return '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! ‚úã \n–ò–ü –í–∞—Å–∏–ª—å–µ–≤'
    return ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! ‚úã \n–ò–ü –í–∞—Å–∏–ª—å–µ–≤', Markup.inlineKeyboard([
      Markup.button.callback('–ì–æ—Ä—è—â–∏–µ –∑–∞–∫—É–ø–∫–∏ üî•', 'HOT_PURCHASE'),
      Markup.button.callback('–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫—É–ø–∫–∏', 'ACTIVE_PURCHASE'),
      Markup.button.callback('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 'NOTIFICATIONS'),
      Markup.button.callback('–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏', 'MY_SUBSCRIPTIONS'),
      Markup.button.callback('–§–∏–ª—å—Ç—Ä—ã', 'FILTERS'),
    ], { wrap: () => true }))
  }

  showHotPurchase({ ctx, index }) {
    let currentPurchase = null;
    if (index === null) {
      ctx.session = { hotPurchases: FAKE_PURCHASES }
      index = 0
    }

    const count = ctx.session.hotPurchases.length
    if (count === 0) {
      return ctx.reply('–ü—É—Å—Ç–æ :-(')

    } else {
      currentPurchase = ctx.session.hotPurchases[index]
    }

    ctx.session.currentHotPurchase = index

    const { itemName, quantity, beforeEnd, currentPrice, customerName, currentPriceOneItem, id } = currentPurchase

    return ctx.reply(`
–ì–æ—Ä—è—â–∏–µ –∑–∞–∫—É–ø–∫–∏: ${index + 1} –∏–∑ ${count}

–ù–æ–º–µ—Ä: ${id}

${itemName}, –≤  –∫–æ–ª. ${quantity}
–î–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: ${beforeEnd}

–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${currentPrice} —Ä., –∑–∞ –µ–¥–∏–Ω–∏—Ü—É ${currentPriceOneItem} —Ä.

–ó–∞–∫–∞–∑—á–∏–∫: ${customerName}`,
      Markup.inlineKeyboard([
        Markup.button.callback('–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É', 'HOT_PURCHASE_BID'),
        Markup.button.callback('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç–∞–≤–∫–∏', 'HOT_PURCHASE_AUTO_BID'),
        Markup.button.callback('–ü–æ—Å–º–æ—Ç—Ä—é –ø–æ–∑–∂–µ', 'HOT_PURCHASE_LATER'),
        Markup.button.callback('–ù–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ', 'HOT_PURCHASE_NOT_INTRESTED'),
      ], { wrap: () => true }))






  }


  async handleTextMessage(ctx: Context, message: string): Promise<any> {
    // console.log({
    //  ctx, message
    // })
    // TODO: FIX OR DELETE?
    //  return ctx.reply('Custom buttons keyboard',Markup.inlineKeyboard([
    //   Markup.button.callback('Movie', 'MOVIE_ACTION'),
    //   Markup.button.callback('Theater', 'THEATER_ACTION'),
    // ])
    //  )

  }
}

const FAKE_PURCHASES = [
  { itemName: '–ê–≤—Ç–æ–º–∞—Ç –ö–∞–ª–∞—à–Ω–∏–∫–æ–≤–∞', quantity: 100, beforeEnd: '1 —á. 5 –º.', currentPrice: 100, customerName: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º', currentPriceOneItem: 1, id: '36–∫8268563' },
  { itemName: '–ê–≤—Ç–æ–º–∞—Ç –ë–æ—Ä–∏—Å–∞', quantity: 100, beforeEnd: '1 —á. 5 –º.', currentPrice: 100, customerName: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º', currentPriceOneItem: 1, id: '36–∫8268563' },
  { itemName: '–ê–≤—Ç–æ–º–∞—Ç –ù–∏–∫–∏—Ç—ã', quantity: 100, beforeEnd: '1 —á. 5 –º.', currentPrice: 100, customerName: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º', currentPriceOneItem: 1, id: '36–∫8268563' },
  { itemName: '–ê–≤—Ç–æ–º–∞—Ç –û–ª–µ–≥–∞', quantity: 100, beforeEnd: '1 —á. 5 –º.', currentPrice: 100, customerName: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º', currentPriceOneItem: 1, id: '36–∫8268563' },
  { itemName: '–ê–≤—Ç–æ–º–∞—Ç –í–ª–∞–¥–∞', quantity: 100, beforeEnd: '1 —á. 5 –º.', currentPrice: 100, customerName: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º', currentPriceOneItem: 1, id: '36–∫8268563' },
]
